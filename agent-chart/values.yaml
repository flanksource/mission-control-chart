# Use this only if you want to replace the default that is .Chart.Name as the name of all the objects.
image:
  repository: docker.io/flanksource/incident-commander
  pullPolicy: IfNotPresent
  tag: "v0.0.1228"
global:
  # -v, -vv, -vvv
  logLevel: ""
  imageRegistry: public.ecr.aws
  imagePrefix: flanksource
  labels: {}
logLevel: "{{.Values.global.logLevel}}"
jsonLogs: true
serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  name: mission-control-sa
  rbac:
    # Whether to create cluster-wide or namespaced roles
    clusterRole: true
    # for secret management with valueFrom
    tokenRequest: true
    secrets: true
    configmaps: true
    # for use with kubernetes resource lookups
    readAll: true
    # Playbook pod actions
    podRun: true
    # exec
    exec: true
# If true, creates secret
upstream:
  createSecret: true
  host: ""
  username: ""
  password: ""
  agentName: ""
  secretName: upstream
resources:
  requests:
    cpu: 100m
    memory: 768Mi
  limits:
    memory: 1024Mi
    cpu: 500m
pushTelemetry:
  enabled: false
  isAgent: true
  playbooks: false
  pushLocation:
    url: https://telemetry.app.flanksource.com/push/topology
db:
  create: true
  conf:
    # Memory Configuration
    shared_buffers: 1GB
    effective_cache_size: 3GB
    work_mem: 10MB
    maintenance_work_mem: 205MB
    # Checkpoint Related Configuration
    min_wal_size: 2GB
    max_wal_size: 3GB
    checkpoint_completion_target: 0.9
    wal_buffers: -1
    # Network Related Configuration
    listen_addresses: '*'
    max_connections: 100
    # Storage Configuration
    random_page_cost: 1.1
    effective_io_concurrency: 200
    # Worker Processes Configuration
    max_worker_processes: 8
    max_parallel_workers_per_gather: 2
    max_parallel_workers: 2
    # Logging configuration for pgbadger
    logging_collector: on
    log_checkpoints: on
    log_connections: on
    log_disconnections: on
    log_lock_waits: on
    log_temp_files: 0
    lc_messages: 'C'
    log_timezone: "UTC"
    # Adjust the minimum time to collect the data
    log_min_duration_statement: '10s'
    log_autovacuum_min_duration: 0
    log_destination: 'csvlog'
    log_filename: 'postgresql-%d.log'
    log_rotation_age: '1d'
    log_rotation_size: '100MB'
    log_truncate_on_rotation: on
    ssl: off
    timezone: "UTC"
    password_encryption: scram-sha-256
    db_user_namespace: off
    extra_float_digits: 0
  secretKeyRef:
    name: incident-commander-postgres
    key: DB_URL
  jwtSecretKeyRef:
    name: incident-commander-postgrest-jwt
    key: PGRST_JWT_SECRET
  storageClass: ''
  storage: 20Gi
  shmVolume: 256Mi
  resources:
    requests:
      memory: 2Gi
  pganalyze:
    enabled: false
    secretName: pganalyze
canary-checker:
  logLevel: "{{.Values.global.logLevel}}"
  image:
    type: full
  db:
    runMigrations: false
    external:
      enabled: true
      create: false
      secretKeyRef:
        name: incident-commander-postgres
        key: DB_URL
  flanksource-ui:
    # Disable canary-checker by default.
    enabled: false
config-db:
  disablePostgrest: true
  logLevel: "{{.Values.global.logLevel}}"
  db:
    runMigrations: false
    embedded:
      persist: false
    external:
      enabled: true
      secretKeyRef:
        name: incident-commander-postgres
        key: DB_URL
