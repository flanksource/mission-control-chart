{{- $secretInj := ( lookup "v1" "Secret" .Release.Namespace "postgres-connection" ) | default dict}}
{{- $injData := ( get $secretInj "data" ) | default dict }}

{{- $secretObj := ( lookup "v1" "Secret" .Release.Namespace .Values.db.secretKeyRef.name ) | default dict}}
{{- $secretData := ( get $secretObj "data" ) | default dict }}

{{- $user :=  (( get $secretData "POSTGRES_USER" ) | b64dec ) | default "postgres" }}
{{- $sslmode :=  (( get $secretData "SSLMODE" ) | b64dec ) | default "disable"  }}
{{- $password :=  (( get $injData "POSTGRES_PASSWORD") | b64dec ) | default (( get $secretData "POSTGRES_PASSWORD") | b64dec ) | default ( randAlphaNum 32 )  }}
{{- $host := print "postgres." .Release.Namespace  ".svc.cluster.local" }}

{{- $jwtSecretObj := ( lookup "v1" "Secret" .Release.Namespace .Values.db.jwtSecretKeyRef.name ) | default dict}}
{{- $jwtSecretData := ( get $jwtSecretObj "data" ) | default dict }}
{{- $pgrstJWTSecret :=  (( get $jwtSecretData .Values.db.jwtSecretKeyRef.key) | b64dec ) | default (( get $injData "PGRST_JWT_SECRET") | b64dec ) | default ( randAlphaNum 32 ) }}

{{- if .Values.db.create  }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.db.secretKeyRef.name }}
type: Opaque
stringData:
  POSTGRES_USER: {{ $user | quote }}
  POSTGRES_PASSWORD: {{ $password | quote }}
  POSTGRES_HOST: {{ $host | quote }}
  SSLMODE: {{ $sslmode | quote }}
  DB_URL:  {{ (print "postgres://" $user ":" $password "@" $host "/mission_control?sslmode=" $sslmode ) | quote }}

{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.db.jwtSecretKeyRef.name }}
type: Opaque
stringData:
  PGRST_JWT_SECRET: {{ $pgrstJWTSecret | quote }}
