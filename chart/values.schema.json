{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "adminPassword": {
      "additionalProperties": false,
      "properties": {
        "secretKeyRef": {
          "additionalProperties": false,
          "properties": {
            "create": {
              "default": true,
              "description": "set to false if you want to pass in an existing secret",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "key": {
              "default": "password",
              "required": [],
              "title": "key",
              "type": "string"
            },
            "name": {
              "default": "mission-control-admin-password",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "create",
            "name",
            "key"
          ],
          "title": "secretKeyRef",
          "type": "object"
        }
      },
      "required": [
        "secretKeyRef"
      ],
      "title": "adminPassword",
      "type": "object"
    },
    "apm-hub": null,
    "authProvider": {
      "default": "kratos",
      "description": "Allowed values are [none, kratos,clerk]",
      "required": [],
      "title": "authProvider",
      "type": "string"
    },
    "canary-checker": null,
    "clerkJWKSURL": {
      "default": "",
      "required": [],
      "title": "clerkJWKSURL",
      "type": "string"
    },
    "clerkOrgID": {
      "default": "",
      "required": [],
      "title": "clerkOrgID",
      "type": "string"
    },
    "config-db": null,
    "db": {
      "additionalProperties": false,
      "properties": {
        "conf": {
          "additionalProperties": true,
          "properties": {
            "db_user_namespace": {
              "default": "off",
              "required": [],
              "title": "db_user_namespace",
              "type": "string"
            },
            "effective_cache_size": {
              "default": "3GB",
              "required": [],
              "title": "effective_cache_size",
              "type": "string"
            },
            "effective_io_concurrency": {
              "default": 200,
              "required": [],
              "title": "effective_io_concurrency",
              "type": "integer"
            },
            "extra_float_digits": {
              "default": 0,
              "required": [],
              "title": "extra_float_digits",
              "type": "integer"
            },
            "log_autovacuum_min_duration": {
              "default": 0,
              "required": [],
              "title": "log_autovacuum_min_duration",
              "type": "integer"
            },
            "log_connections": {
              "default": "on",
              "required": [],
              "title": "log_connections",
              "type": "string"
            },
            "log_destination": {
              "default": "stderr",
              "required": [],
              "title": "log_destination",
              "type": "string"
            },
            "log_directory": {
              "default": "/var/log/postgresql",
              "required": [],
              "title": "log_directory",
              "type": "string"
            },
            "log_file_mode": {
              "default": 644,
              "required": [],
              "title": "log_file_mode",
              "type": "integer"
            },
            "log_filename": {
              "default": "postgresql-%d.log",
              "required": [],
              "title": "log_filename",
              "type": "string"
            },
            "log_line_prefix": {
              "default": "%m [%p] %q[user=%u,db=%d,app=%a] ",
              "required": [],
              "title": "log_line_prefix",
              "type": "string"
            },
            "log_lock_waits": {
              "default": "on",
              "required": [],
              "title": "log_lock_waits",
              "type": "string"
            },
            "log_min_duration_statement": {
              "default": "1s",
              "required": [],
              "title": "log_min_duration_statement",
              "type": "string"
            },
            "log_rotation_age": {
              "default": "1d",
              "required": [],
              "title": "log_rotation_age",
              "type": "string"
            },
            "log_rotation_size": {
              "default": "100MB",
              "required": [],
              "title": "log_rotation_size",
              "type": "string"
            },
            "log_statement": {
              "default": "all",
              "required": [],
              "title": "log_statement",
              "type": "string"
            },
            "log_temp_files": {
              "default": 0,
              "required": [],
              "title": "log_temp_files",
              "type": "integer"
            },
            "log_timezone": {
              "default": "UTC",
              "required": [],
              "title": "log_timezone",
              "type": "string"
            },
            "log_truncate_on_rotation": {
              "default": "on",
              "required": [],
              "title": "log_truncate_on_rotation",
              "type": "string"
            },
            "logging_collector": {
              "default": "on",
              "required": [],
              "title": "logging_collector",
              "type": "string"
            },
            "maintenance_work_mem": {
              "default": "256MB",
              "required": [],
              "title": "maintenance_work_mem",
              "type": "string"
            },
            "max_connections": {
              "default": 200,
              "required": [],
              "title": "max_connections",
              "type": "integer"
            },
            "max_wal_size": {
              "default": "4GB",
              "required": [],
              "title": "max_wal_size",
              "type": "string"
            },
            "password_encryption": {
              "default": "scram-sha-256",
              "required": [],
              "title": "password_encryption",
              "type": "string"
            },
            "shared_buffers": {
              "default": "1GB",
              "required": [],
              "title": "shared_buffers",
              "type": "string"
            },
            "ssl": {
              "default": "off",
              "required": [],
              "title": "ssl",
              "type": "string"
            },
            "timezone": {
              "default": "UTC",
              "required": [],
              "title": "timezone",
              "type": "string"
            },
            "wal_buffers": {
              "default": "16MB",
              "required": [],
              "title": "wal_buffers",
              "type": "string"
            },
            "work_mem": {
              "default": "10MB",
              "required": [],
              "title": "work_mem",
              "type": "string"
            }
          },
          "required": [
            "max_connections",
            "shared_buffers",
            "effective_cache_size",
            "maintenance_work_mem",
            "wal_buffers",
            "effective_io_concurrency",
            "work_mem",
            "max_wal_size",
            "log_autovacuum_min_duration",
            "log_connections",
            "log_destination",
            "log_directory",
            "log_file_mode",
            "log_filename",
            "log_line_prefix",
            "log_lock_waits",
            "log_min_duration_statement",
            "log_rotation_age",
            "log_rotation_size",
            "log_truncate_on_rotation",
            "log_statement",
            "log_temp_files",
            "log_timezone",
            "logging_collector",
            "ssl",
            "timezone",
            "password_encryption",
            "db_user_namespace",
            "extra_float_digits"
          ],
          "title": "conf",
          "type": "object"
        },
        "create": {
          "default": true,
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "jwtSecretKeyRef": {
          "additionalProperties": false,
          "properties": {
            "key": {
              "default": "PGRST_JWT_SECRET",
              "required": [],
              "title": "key",
              "type": "string"
            },
            "name": {
              "default": "incident-commander-postgrest-jwt",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name",
            "key"
          ],
          "title": "jwtSecretKeyRef",
          "type": "object"
        },
        "pganalyze": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "secretName": {
              "default": "pganalyze",
              "required": [],
              "title": "secretName",
              "type": "string"
            },
            "systemID": {
              "default": "mission-control",
              "required": [],
              "title": "systemID",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "systemID",
            "secretName"
          ],
          "title": "pganalyze",
          "type": "object"
        },
        "resources": {
          "additionalProperties": false,
          "properties": {
            "requests": {
              "additionalProperties": false,
              "properties": {
                "memory": {
                  "default": "4Gi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [
                "memory"
              ],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [
            "requests"
          ],
          "title": "resources",
          "type": "object"
        },
        "secretKeyRef": {
          "additionalProperties": false,
          "properties": {
            "key": {
              "default": "DB_URL",
              "required": [],
              "title": "key",
              "type": "string"
            },
            "name": {
              "default": "incident-commander-postgres",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name",
            "key"
          ],
          "title": "secretKeyRef",
          "type": "object"
        },
        "shmVolume": {
          "default": "256Mi",
          "required": [],
          "title": "shmVolume",
          "type": "string"
        },
        "storage": {
          "default": "20Gi",
          "required": [],
          "title": "storage",
          "type": "string"
        },
        "storageClass": {
          "default": "",
          "required": [],
          "title": "storageClass",
          "type": "string"
        }
      },
      "required": [
        "create",
        "secretKeyRef",
        "jwtSecretKeyRef",
        "storageClass",
        "storage",
        "shmVolume",
        "resources",
        "pganalyze"
      ],
      "title": "db",
      "type": "object"
    },
    "externalPostgrest": {
      "additionalProperties": false,
      "properties": {
        "dbAnonRole": {
          "default": "postgrest_anon",
          "required": [],
          "title": "dbAnonRole",
          "type": "string"
        },
        "dbScema": {
          "default": "public",
          "required": [],
          "title": "dbScema",
          "type": "string"
        },
        "enable": {
          "default": true,
          "required": [],
          "title": "enable",
          "type": "boolean"
        },
        "imageName": {
          "default": "",
          "description": "supabase/postgrest if registry is ecr and postgrest/postgrest if registry is docker.io",
          "required": [],
          "title": "imageName",
          "type": "string"
        },
        "logLevel": {
          "default": "info",
          "required": [],
          "title": "logLevel",
          "type": "string"
        },
        "maxRows": {
          "default": 2000,
          "required": [],
          "title": "maxRows",
          "type": "integer"
        },
        "tag": {
          "default": "v10.2.0",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [
        "enable",
        "tag",
        "imageName",
        "logLevel",
        "dbScema",
        "dbAnonRole",
        "maxRows"
      ],
      "title": "externalPostgrest",
      "type": "object"
    },
    "extraArgs": {
      "additionalProperties": false,
      "required": [],
      "title": "extraArgs",
      "type": "object"
    },
    "flanksource-ui": null,
    "global": {
      "additionalProperties": false,
      "properties": {
        "api": {
          "additionalProperties": false,
          "properties": {
            "host": {
              "default": "mission-control-ui.local/api",
              "required": [],
              "title": "host",
              "type": "string"
            },
            "tlsSecretName": {
              "default": "",
              "required": [],
              "title": "tlsSecretName",
              "type": "string"
            }
          },
          "required": [
            "host",
            "tlsSecretName"
          ],
          "title": "api",
          "type": "object"
        },
        "db": {
          "additionalProperties": false,
          "properties": {
            "connectionPooler": {
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "extraContainers": {
                  "default": "",
                  "required": [],
                  "title": "extraContainers",
                  "type": "string"
                },
                "image": {
                  "default": "bitnami/pgbouncer:1.22.0",
                  "required": [],
                  "title": "image",
                  "type": "string"
                },
                "secretKeyRef": {
                  "additionalProperties": false,
                  "properties": {
                    "key": {
                      "default": "DB_URL",
                      "required": [],
                      "title": "key",
                      "type": "string"
                    },
                    "name": {
                      "default": "mission-control-connection-pooler",
                      "required": [],
                      "title": "name",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "key"
                  ],
                  "title": "secretKeyRef",
                  "type": "object"
                },
                "serviceAccount": {
                  "additionalProperties": false,
                  "properties": {
                    "annotations": {
                      "additionalProperties": false,
                      "required": [],
                      "title": "annotations",
                      "type": "object"
                    }
                  },
                  "required": [
                    "annotations"
                  ],
                  "title": "serviceAccount",
                  "type": "object"
                }
              },
              "required": [
                "enabled",
                "secretKeyRef",
                "serviceAccount",
                "extraContainers",
                "image"
              ],
              "title": "connectionPooler",
              "type": "object"
            }
          },
          "required": [
            "connectionPooler"
          ],
          "title": "db",
          "type": "object"
        },
        "imagePrefix": {
          "default": "flanksource",
          "required": [],
          "title": "imagePrefix",
          "type": "string"
        },
        "imageRegistry": {
          "default": "public.ecr.aws",
          "required": [],
          "title": "imageRegistry",
          "type": "string"
        },
        "labels": {
          "additionalProperties": false,
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "logLevel": {
          "default": "",
          "description": "-v, -vv, -vvv",
          "required": [],
          "title": "logLevel",
          "type": "string"
        },
        "otel": {
          "additionalProperties": false,
          "properties": {
            "collector": {
              "default": "",
              "required": [],
              "title": "collector",
              "type": "string"
            },
            "labels": {
              "default": "",
              "required": [],
              "title": "labels",
              "type": "string"
            }
          },
          "required": [
            "collector",
            "labels"
          ],
          "title": "otel",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": false,
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [
            "enabled",
            "labels"
          ],
          "title": "serviceMonitor",
          "type": "object"
        },
        "ui": {
          "additionalProperties": false,
          "properties": {
            "host": {
              "default": "mission-control-ui.local",
              "required": [],
              "title": "host",
              "type": "string"
            },
            "tlsSecretName": {
              "default": "mission-control-ui-tls",
              "required": [],
              "title": "tlsSecretName",
              "type": "string"
            }
          },
          "required": [
            "host",
            "tlsSecretName"
          ],
          "title": "ui",
          "type": "object"
        }
      },
      "required": [
        "logLevel",
        "imageRegistry",
        "imagePrefix",
        "labels",
        "serviceMonitor",
        "ui",
        "api",
        "otel",
        "db"
      ],
      "title": "global",
      "type": "object"
    },
    "identityRoleMapper": {
      "additionalProperties": false,
      "description": "Specify the cel-go script or the file path to the cel script.\nScript is used to map the user identity to the role \u0026 teams.",
      "properties": {
        "configMap": {
          "additionalProperties": false,
          "description": "specify the script via a config map that'll be mounted to `mountPath`",
          "properties": {
            "key": {
              "default": "",
              "required": [],
              "title": "key",
              "type": "string"
            },
            "mountPath": {
              "default": "/etc/identity-role-mapper",
              "required": [],
              "title": "mountPath",
              "type": "string"
            },
            "name": {
              "default": "",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name",
            "key",
            "mountPath"
          ],
          "title": "configMap",
          "type": "object"
        },
        "script": {
          "default": "",
          "description": "specify the script inline",
          "required": [],
          "title": "script",
          "type": "string"
        }
      },
      "required": [
        "script",
        "configMap"
      ],
      "title": "identityRoleMapper",
      "type": "object"
    },
    "image": {
      "additionalProperties": false,
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "repository": {
          "default": "docker.io/flanksource/incident-commander",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "v0.0.982",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [
        "repository",
        "pullPolicy",
        "tag"
      ],
      "title": "image",
      "type": "object"
    },
    "ingress": {
      "additionalProperties": false,
      "description": "Enable ingress only if the UI is deployed outside of the cluster and calls public incident-commander api endpoint.",
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "properties": {
            "kubernetes.io/ingress.class": {
              "default": "nginx",
              "required": [],
              "title": "kubernetes.io/ingress.class",
              "type": "string"
            }
          },
          "required": [
            "kubernetes.io/ingress.class"
          ],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "host": {
          "default": "{{.Values.global.api.host}}",
          "required": [],
          "title": "host",
          "type": "string"
        },
        "tls": {
          "items": {
            "anyOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "hosts": {
                    "items": {
                      "anyOf": [
                        {
                          "required": [],
                          "type": "string"
                        }
                      ],
                      "required": []
                    },
                    "required": [],
                    "title": "hosts",
                    "type": "array"
                  },
                  "secretName": {
                    "default": "{{.Values.global.api.tlsSecretName}}",
                    "required": [],
                    "title": "secretName",
                    "type": "string"
                  }
                },
                "required": [
                  "hosts",
                  "secretName"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "annotations",
        "host",
        "tls"
      ],
      "title": "ingress",
      "type": "object"
    },
    "jsonLogs": {
      "default": true,
      "required": [],
      "title": "jsonLogs",
      "type": "boolean"
    },
    "kratos": null,
    "logLevel": {
      "default": "{{.Values.global.logLevel}}",
      "description": "-v, -vv, -vvv",
      "required": [],
      "title": "logLevel",
      "type": "string"
    },
    "nameOverride": {
      "default": "",
      "description": "Use this only if you want to replace the default that is .Chart.Name as the name of all the objects.",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "otel": {
      "additionalProperties": false,
      "properties": {
        "collector": {
          "default": "{{.Values.global.otel.collector}}",
          "description": "OpenTelemetry gRPC collector endpoint in host:port format",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "labels": {
          "default": "{{ .Values.global.otel.labels }}",
          "required": [],
          "title": "labels",
          "type": "string"
        },
        "serviceName": {
          "default": "mission-control",
          "required": [],
          "title": "serviceName",
          "type": "string"
        }
      },
      "required": [
        "collector",
        "serviceName",
        "labels"
      ],
      "title": "otel",
      "type": "object"
    },
    "properties": {
      "additionalProperties": false,
      "description": "Properties to configure mission-control feature sets",
      "properties": {
        "incidents.disable": {
          "default": true,
          "required": [],
          "title": "incidents.disable",
          "type": "boolean"
        },
        "logs.disable": {
          "default": true,
          "required": [],
          "title": "logs.disable",
          "type": "boolean"
        }
      },
      "required": [
        "incidents.disable",
        "logs.disable"
      ],
      "title": "properties",
      "type": "object"
    },
    "replicas": {
      "default": 1,
      "description": "yaml-language-server: $schema=values.schema.json",
      "required": [],
      "title": "replicas",
      "type": "integer"
    },
    "resources": {
      "additionalProperties": false,
      "properties": {
        "limits": {
          "additionalProperties": false,
          "properties": {
            "cpu": {
              "default": "500m",
              "required": [],
              "title": "cpu",
              "type": "string"
            },
            "memory": {
              "default": "1024Mi",
              "required": [],
              "title": "memory",
              "type": "string"
            }
          },
          "required": [
            "memory",
            "cpu"
          ],
          "title": "limits",
          "type": "object"
        },
        "requests": {
          "additionalProperties": false,
          "properties": {
            "cpu": {
              "default": "100m",
              "required": [],
              "title": "cpu",
              "type": "string"
            },
            "memory": {
              "default": "768Mi",
              "required": [],
              "title": "memory",
              "type": "string"
            }
          },
          "required": [
            "cpu",
            "memory"
          ],
          "title": "requests",
          "type": "object"
        }
      },
      "required": [
        "requests",
        "limits"
      ],
      "title": "resources",
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "name": {
          "default": "mission-control-sa",
          "description": "Annotations to add to the service account",
          "required": [],
          "title": "name",
          "type": "string"
        },
        "rbac": {
          "additionalProperties": false,
          "properties": {
            "clusterAdmin": {
              "default": false,
              "required": [],
              "title": "clusterAdmin",
              "type": "boolean"
            },
            "clusterRole": {
              "default": true,
              "description": "Whether to create cluster-wide or namespaced roles",
              "required": [],
              "title": "clusterRole",
              "type": "boolean"
            },
            "configmaps": {
              "default": true,
              "required": [],
              "title": "configmaps",
              "type": "boolean"
            },
            "exec": {
              "default": true,
              "description": "Allows mission control to exec into pods",
              "required": [],
              "title": "exec",
              "type": "boolean"
            },
            "extra": {
              "default": [],
              "items": {
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "extra",
              "type": "array"
            },
            "impersonate": {
              "default": false,
              "description": "Impersonate allows the service account to impersonate as\n- mission-control-reader-role\n- mission-control-writer-role\nThis is used by kubeproxy.",
              "required": [],
              "title": "impersonate",
              "type": "boolean"
            },
            "podRun": {
              "default": true,
              "description": "Required for pod playbook actions",
              "required": [],
              "title": "podRun",
              "type": "boolean"
            },
            "readAll": {
              "default": true,
              "description": "for use with kubernetes resource lookups",
              "required": [],
              "title": "readAll",
              "type": "boolean"
            },
            "secrets": {
              "default": true,
              "required": [],
              "title": "secrets",
              "type": "boolean"
            },
            "tokenRequest": {
              "default": true,
              "description": "for secret management with valueFrom",
              "required": [],
              "title": "tokenRequest",
              "type": "boolean"
            }
          },
          "required": [
            "impersonate",
            "clusterRole",
            "clusterAdmin",
            "tokenRequest",
            "secrets",
            "configmaps",
            "readAll",
            "podRun",
            "exec"
          ],
          "title": "rbac",
          "type": "object"
        }
      },
      "required": [
        "name",
        "annotations",
        "rbac"
      ],
      "title": "serviceAccount",
      "type": "object"
    },
    "serviceMonitor": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "labels": {
          "additionalProperties": true,
          "required": [],
          "title": "labels"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "serviceMonitor",
      "type": "object"
    },
    "smtp": {
      "additionalProperties": false,
      "properties": {
        "secretRef": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "default": "incident-commander-smtp",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "title": "secretRef",
          "type": "object"
        }
      },
      "required": [
        "secretRef"
      ],
      "title": "smtp",
      "type": "object"
    },
    "upstream_push": {
      "additionalProperties": false,
      "description": "Configuration for pushing data to upstream\nupstream_push:\n  name: ''\n  host: ''\n  user: ''\n  password: ''\n  labels: 'key1=val1,key2=val2'",
      "required": [],
      "title": "upstream_push",
      "type": "object"
    }
  },
  "required": [
    "replicas",
    "nameOverride",
    "image",
    "global",
    "serviceAccount",
    "extraArgs",
    "externalPostgrest",
    "identityRoleMapper",
    "serviceMonitor",
    "upstream_push",
    "authProvider",
    "clerkJWKSURL",
    "clerkOrgID",
    "otel",
    "properties",
    "logLevel",
    "jsonLogs",
    "db",
    "smtp",
    "adminPassword",
    "canary-checker",
    "config-db",
    "apm-hub",
    "ingress",
    "flanksource-ui",
    "kratos",
    "resources"
  ],
  "type": "object"
}