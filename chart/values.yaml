replicas: 1
# Use this only if you want to replace the default that is .Chart.Name as the name of all the objects.
nameOverride: ""
disablePostgrest: true
image:
  repository: docker.io/flanksource/incident-commander
  pullPolicy: IfNotPresent
  tag: "v0.0.257"
externalPostgrest:
  enable: true
  tag: v10.1.0
  logLevel: info
  dbScema: public
  dbAnonRole: postgrest_anon
db:
  create: true
  secretKeyRef:
    name: incident-commander-postgres
    key: DB_URL
  jwtSecretKeyRef:
    name: incident-commander-postgrest-jwt
    key: PGRST_JWT_SECRET
  storageClass:
  storage: 10Gi
smtp:
  secretRef:
    name: incident-commander-smtp
    # Secret object should contain
    # SMTP_HOST: <host>
    # SMTP_PORT: <port>
    # SMTP_USER: <user>
    # SMTP_PASSWORD: <password>
adminPassword: admin
canary-checker:
  disablePostgrest: true
  db:
    external:
      enabled: true
      create: false
      secretKeyRef:
        name: incident-commander-postgres
        key: DB_URL
  flanksource-ui:
    enabled: false # Disable canary-checker by default.
    withoutAuth: true
    nameOverride: "canary-checker-ui"
    fullnameOverride: "canary-checker-ui"
    oryKratosURL: ""
    backendURL: http://canary-checker:8080
    ingress:
      enabled: true
      host: "canary-checker-ui.local"
config-db:
  disablePostgrest: true
  db:
    enabled: false
    secretKeyRef:
      create: false
      name: incident-commander-postgres
      key: DB_URL
apm-hub:
  db:
    enabled: false
    secretKeyRef:
      create: false
      name: incident-commander-postgres
      key: DB_URL
# Enable ingress only if the UI is deployed outside of the cluster and calls public incident-commander api endpoint.
ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: incident-commander.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
uiHost: "http://incident-manager-ui.local"
kratosURL: http://incident-commander:8080/kratos/
flanksource-ui:
  enabled: true
  nameOverride: "incident-manager-ui"
  fullnameOverride: "incident-manager-ui"
  oryKratosURL: http://incident-commander:8080/kratos/
  backendURL: http://incident-commander:8080
  ingress:
    enabled: true
    host: "incident-manager-ui.local"
    tls:
      - hosts:
          - "incident-manager-ui.local"
# - if chart name (incident-commander) is changed, change the urls. E.g.
# oryKratosURI url points to the incident-commander service with a suffix.
#
# - deletion of configmap and using our own secrets file etc. `make chart` will
# extract kratos and delete configmap-config.yaml, so that we can explicitly -
# set config manually. Allows for us to use templates for config and include -
# identity-schema json file (encoding it as part of templating process).
#
# - Disable kratos secret. Again, we explicitly generate secrets.yaml to include
# database URL in it.
kratos:
  secret:
    # Disable kratos secret generation. We explicitly generate kratos secret to have access to database URL for dns key in secret. See: /chart/templates/secrets.yaml
    enabled: false
  # don't include Release.name in kratos name
  fullnameOverride: kratos
  ingress:
    public:
      enabled: false
  # NOTE(ciju): we have our own template for kratos-config. Which means kratos
  # templates doesn't have access to the config file, to generate hash from.
  # This could be fixed by explicitly passing hash value?
  configmap:
    hashSumEnabled: false
  kratos:
    development: true
    automigration:
      enabled: true
      # Could be either job or initContainer. initContainer used here because
      # job runs as a pre-install,pre-update hook, but requires values from
      # secret, which are not yet install when the charts are being installed
      # for the first time.
      type: initContainer
    serve:
      public:
        base_url: http://incident-commander:8080/kratos/
        cors:
          enabled: true
          # annotations:
          #   kubernetes.io/ingress.class: nginx
          #   kubernetes.io/tls-acme: "true"
      # admin:
      #   base_url: http://0.0.0.0:4434/
    # Config to be merged in kratos ConfigMap. See: templates/kratos-config.yaml
    config:
      secrets:
        default:
          - yet another secret
          - lorem ipsum dolores
          - just a random a string secret
      courier:
        smtp:
          connection_uri: smtp://wrong-url
      session:
        # Session lifespan. Default: 14 days
        lifespan: 336h
resources:
  requests:
    cpu: 200m
    memory: 200Mi
  limits:
    memory: 512Mi
    cpu: 500m
