apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "incident-commander.name" . }}
  labels:
    {{- include "incident-commander.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "incident-commander.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "incident-commander.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "incident-commander.fullname" . }}-sa
      volumes:
        - name: properties-config
          configMap:
            name: {{ include "incident-commander.fullname" . }}-properties-config
      {{- if ne .Values.identityRoleMapper.configMap.name ""}}
        - name: identity-role-mapper
          configMap:
            name: {{ .Values.identityRoleMapper.configMap.name}}
      {{- end}}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if ne .Values.identityRoleMapper.configMap.name ""}}
          volumeMounts:
            - name: identity-role-mapper
              mountPath: {{ .Values.identityRoleMapper.configMap.mountPath}}
          {{- end}}
          env:
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.db.connectionPooler.enabled }}{{ .Values.db.connectionPooler.secretKeyRef.name }}{{ else }}{{ .Values.db.secretKeyRef.name }}{{ end }}
                  key: {{ if .Values.global.db.connectionPooler.enabled }}{{ .Values.db.connectionPooler.secretKeyRef.key }}{{ else }}{{ .Values.db.secretKeyRef.key }}{{ end }}
            - name: PGRST_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.jwtSecretKeyRef.name  }}
                  key: {{ .Values.db.jwtSecretKeyRef.key }}
            - name: ADMIN_PASSWORD
              value: {{ .Values.adminPassword }}
          envFrom:
            - secretRef:
                name: {{ .Values.smtp.secretRef.name }}
                optional: true
          command:
            - /app/incident-commander
          args:
            - serve
            - --public-endpoint=https://{{ tpl .Values.ingress.host . }}
            - --apm-hub=http://apm-hub:8080
            - --canary-checker=http://canary-checker:8080
            - --config-db=http://config-db:8080
            - --auth={{ .Values.authProvider }}
           {{- if eq .Values.authProvider "kratos" }}
            - --kratos-api=http://kratos-public:80
           {{- end }}
           {{- if eq .Values.authProvider "clerk" }}
            - --clerk-jwks-url={{ .Values.clerkJWKSURL }}
            - --clerk-org-id={{ .Values.clerkOrgID }}
           {{- end }}
           {{- if eq .Values.externalPostgrest.enable true }}
            - --postgrest-uri=http://postgrest:3000
           {{- else}}
            - --postgrest-max-rows='{{.Values.externalPostgrest.maxRows}}'
           {{- end }}
           {{- range $k, $v := .Values.extraArgs}}
           - --{{$k}}={{$v}}
           {{- end }}
           {{- if .Values.upstream_push }}
            - --upstream-name={{ .Values.upstream_push.name }}
            - --upstream-host={{ .Values.upstream_push.host }}
            - --upstream-user={{ .Values.upstream_push.user }}
            - --upstream-password={{ .Values.upstream_push.password }}
            - --upstream-labels={{ .Values.upstream_push.labels | default "" }}
           {{- end }}
           {{- if (tpl .Values.otel.collector .) }}
            - --otel-collector-url={{ tpl .Values.otel.collector . | default "" }}
           {{- end }}
           {{- if (tpl .Values.otel.serviceName .) }}
            - --otel-service-name={{ tpl .Values.otel.serviceName . | default "mission-control" }}
           {{- end }}
           {{- if ne .Values.identityRoleMapper.script "" }}
            - --identity-role-mapper='{{ .Values.identityRoleMapper.script }}'
           {{- else if ne .Values.identityRoleMapper.configMap.name ""}}
            - --identity-role-mapper='file://{{ .Values.identityRoleMapper.configMap.mountPath }}/{{ .Values.identityRoleMapper.configMap.key}}'
           {{- end}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          startupProbe:
              periodSeconds: 10
              failureThreshold: 120 # 20 minutes for any migration scripts to run
              httpGet:
                path: /health
                port: 8080
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
          volumeMounts:
            - mountPath: /app/mission-control.properties
              name: properties-config
              subPath: mission-control.properties
      {{- with .Values.extra }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
