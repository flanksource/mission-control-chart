apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "incident-commander.name" . }}
  labels:
    {{- include "incident-commander.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "incident-commander.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "incident-commander.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "incident-commander.fullname" . }}-sa
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.secretKeyRef.name  }}
                  key: {{ .Values.db.secretKeyRef.key }}
            - name: PGRST_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.jwtSecretKeyRef.name  }}
                  key: {{ .Values.db.jwtSecretKeyRef.key }}
            - name: ADMIN_PASSWORD
              value: {{ .Values.adminPassword }}
          envFrom:
            - secretRef:
                name: {{ .Values.smtp.secretRef.name }}
                optional: true
          command:
            - /app/incident-commander
          args:
            - serve
            - -vvv
            - --public-endpoint=https://{{ .Values.ingress.host }}
            - --apm-hub=http://apm-hub:8080
            - --canary-checker=http://canary-checker:8080
            - --config-db=http://config-db:8080
            - --auth={{ .Values.authProvider }}
           {{- if eq .Values.authProvider "kratos" }}
            - --kratos-api=http://kratos-public:80
           {{- end }}
           {{- if eq .Values.authProvider "clerk" }}
            - --clerk-jwks-url={{ .Values.clerkJWKSURL }}
            - --clerk-org-id={{ .Values.clerkOrgID }}
           {{- end }}
           {{- if eq .Values.externalPostgrest.enable true }}
            - --postgrest-uri=http://postgrest:3000
           {{- else}}
            - --postgrest-max-rows='{{.Values.externalPostgrest.maxRows}}'
           {{- end }}
           {{- if .Values.upstream_push }}
            - --upstream-name={{ .Values.upstream_push.name }}
            - --upstream-host={{ .Values.upstream_push.host }}
            - --upstream-user={{ .Values.upstream_push.user }}
            - --upstream-password={{ .Values.upstream_push.password }}
            - --upstream-labels={{ .Values.upstream_push.labels | default "" }}
           {{- end }}
           {{- if .Values .Values.otel_collector }}
            - --otel-collector-url={{ .Values.otel_collector | default "" | quote }}
           {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
      {{- with .Values.extra }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
