apiVersion: canaries.flanksource.com/v1
kind: SystemTemplate
metadata:
  name: mission-control
spec:
  icon: mission-control
  type: Topology
  schedule: "@every 15m"
  properties:
    - name: URL
      type: url
      configLookup:
        config:
          name: incident-manager-ui
          type: Kubernetes::Ingress
          tags:
            app.kubernetes.io/name: incident-manager-ui
            app.kubernetes.io/instance: incident-commander
        display:
          javascript: config.spec.rules[0].host
  components:
    - name: Incident Commander
      type: API
      icon: incidents
      checks:
        - inline:
            schedule: "@every 1m"
            http:
              - name: incident-commander-http-check
                endpoint: http://incident-commander:8080/health
                responseCodes: [200]
      selectors:
        - name: pods
          labelSelector: app.kubernetes.io/name=incident-commander
      properties:
        - name: Incidents
          headline: true
          lookup:
            postgres:
              - connection: "postgres://$(username):$(password)@postgres:5432/incident_commander?sslmode=disable"
                name: Incident count query
                auth:
                  username:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_USER
                        name: incident-commander-postgres
                  password:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_PASSWORD
                        name: incident-commander-postgres
                query: SELECT count(*) FROM incidents WHERE (resolved IS NULL) OR (closed IS NULL)
                display:
                  template: |
                    {{- range $r := .results.rows }}
                    {{- $r.count }}
                    {{- end}}
                results: 1
        - name: Version
          headline: true
          configLookup:
            config:
              name: incident-commander
              type: Kubernetes::Deployment
              tags:
                app.kubernetes.io/name: incident-commander
                app.kubernetes.io/instance: incident-commander
            display:
              javascript: |
                config.spec.template.spec.containers[0]['image'].split(':')[1]
        - name: Docs
          text: https://docs.flanksource.com
          type: url
      components:
        - name: Teams
          type: lookup
          icon: group
          lookup:
            postgres:
              - connection: "postgres://$(username):$(password)@postgres:5432/incident_commander?sslmode=disable"
                name: Team names query
                auth:
                  username:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_USER
                        name: incident-commander-postgres
                  password:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_PASSWORD
                        name: incident-commander-postgres
                query: SELECT name FROM teams
                display:
                  javascript: |
                    JSON.stringify(results.rows.map(function(r) {return {name: r.name}}))
                results: -1

    - name: Canary Checker
      type: API
      icon: heart
      selectors:
        - name: pods
          labelSelector: app.kubernetes.io/name=canary-checker
      checks:
        - inline:
            schedule: "@every 1m"
            http:
              - name: canary-checker-http-check
                endpoint: http://canary-checker:8080/health
                responseCodes: [200]
      properties:
        - name: Components
          headline: true
          lookup:
            postgres:
              - connection: "postgres://$(username):$(password)@postgres:5432/incident_commander?sslmode=disable"
                name: Component count query
                auth:
                  username:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_USER
                        name: incident-commander-postgres
                  password:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_PASSWORD
                        name: incident-commander-postgres
                query: SELECT count(*) FROM components WHERE deleted_at IS NULL
                display:
                  template: |
                    {{- range $r := .results.rows }}
                    {{- $r.count }}
                    {{- end}}
                results: 1
        - name: Checks
          headline: true
          lookup:
            postgres:
              - connection: "postgres://$(username):$(password)@postgres:5432/incident_commander?sslmode=disable"
                name: Check count query
                auth:
                  username:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_USER
                        name: incident-commander-postgres
                  password:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_PASSWORD
                        name: incident-commander-postgres
                query: SELECT count(*) FROM checks WHERE deleted_at IS NULL
                display:
                  javascript: results.rows[0].count
                results: 1
        - name: Version
          headline: true
          configLookup:
            config:
              name: canary-checker
              type: Kubernetes::Deployment
              tags:
                app.kubernetes.io/name: canary-checker
                app.kubernetes.io/instance: incident-commander
            display:
              javascript: |
                config.spec.template.spec.containers[0]['image'].split(':')[1]
        - name: Docs
          text: https://docs.flanksource.com/canary-checker/overview
          type: url
      components:
        - name: SystemTemplates
          type: lookup
          icon: k8s-customresourcedefinition
          lookup:
            postgres:
              - connection: "postgres://$(username):$(password)@postgres:5432/incident_commander?sslmode=disable"
                name: SystemTemplate count query
                auth:
                  username:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_USER
                        name: incident-commander-postgres
                  password:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_PASSWORD
                        name: incident-commander-postgres
                query: |
                  SELECT * FROM (
                    SELECT
                      ROW_NUMBER() OVER (PARTITION BY t.name ORDER BY time_end DESC) AS rn, t.name, jh.status, jh.success_count,
                      jh.error_count, jh.duration_millis, jh.time_end
                    FROM templates t
                    INNER JOIN job_history jh ON t.id::text = jh.resource_id) AS s WHERE rn = 1
                display:
                  javascript: |
                    JSON.stringify(results.rows.map(function(r) {return {
                      name: r.name,
                      properties: [
                      {
                        name: 'Last runtime',
                        text: r.time_end,
                      },
                      {
                        name: 'Duration',
                        text: r.duration_millis,
                        unit: 'ms',
                        headline: true,
                      },
                      {
                        name: 'Success Count',
                        text: r.success_count,
                        headline: true,
                      },
                      {
                        name: 'Error Count',
                        text: r.error_count,
                        headline: true,
                      },
                    ],
                    }}))
                results: 1
          forEach:
            properties:
              - name: Type
                text: SystemTemplate
    - name: APM Hub
      type: API
      icon: logs
      selectors:
        - name: pods
          labelSelector: app.kubernetes.io/name=apm-hub
      properties:
        - name: Backends
          lookup:
            postgres:
              - connection: "postgres://$(username):$(password)@postgres:5432/incident_commander?sslmode=disable"
                name: Backends count query
                auth:
                  username:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_USER
                        name: incident-commander-postgres
                  password:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_PASSWORD
                        name: incident-commander-postgres
                query: SELECT count(*) FROM logging_backends WHERE deleted_at IS NULL
                display:
                  javascript: results.rows[0].count
                results: 1
        - name: Version
          configLookup:
            config:
              name: apm-hub
              type: Kubernetes::Deployment
              tags:
                app.kubernetes.io/name: apm-hub
                app.kubernetes.io/instance: incident-commander
            display:
              javascript: |
                config.spec.template.spec.containers[0]['image'].split(':')[1]
        - name: Docs
          text: https://docs.flanksource.com/apm-hub/overview
          type: url

    - name: Config DB
      type: API
      icon: config
      selectors:
        - name: pods
          labelSelector: app.kubernetes.io/name=config-db
      checks:
        - inline:
            schedule: "@every 1m"
            http:
              - name: config-db-http-check
                endpoint: http://config-db:8080/live
                responseCodes: [200]
      properties:
        - name: Config Items
          lookup:
            postgres:
              - connection: "postgres://$(username):$(password)@postgres:5432/incident_commander?sslmode=disable"
                name: Config Items count query
                auth:
                  username:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_USER
                        name: incident-commander-postgres
                  password:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_PASSWORD
                        name: incident-commander-postgres
                query: SELECT count(*) FROM config_items WHERE deleted_at IS NULL
                display:
                  template: |
                    {{- range $r := .results.rows }}
                    {{- $r.count }}
                    {{- end}}
                results: 1
        - name: Version
          configLookup:
            config:
              name: config-db
              type: Kubernetes::Deployment
              tags:
                app.kubernetes.io/name: config-db
                app.kubernetes.io/instance: incident-commander
            display:
              javascript: |
                config.spec.template.spec.containers[0]['image'].split(':')[1]
        - name: Docs
          text: https://docs.flanksource.com/config-db/overview
          type: url

      components:
        - name: ConfigScrapers
          type: lookup
          icon: k8s-customresourcedefinition
          lookup:
            postgres:
              - connection: "postgres://$(username):$(password)@postgres:5432/incident_commander?sslmode=disable"
                name: Config scrapers count query
                auth:
                  username:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_USER
                        name: incident-commander-postgres
                  password:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_PASSWORD
                        name: incident-commander-postgres
                query: |
                  SELECT * FROM (
                    SELECT
                      ROW_NUMBER() OVER (PARTITION BY c.name ORDER BY time_end DESC) AS rn, c.name, jh.status, jh.success_count,
                      jh.error_count, jh.duration_millis, jh.time_end
                    FROM config_scrapers c
                    INNER JOIN job_history jh ON c.id::text = jh.resource_id) AS s WHERE rn = 1
                display:
                  javascript: |
                    JSON.stringify(results.rows.map(function(r) {return {
                      name: r.name,
                      properties: [
                      {
                        name: 'Last runtime',
                        text: r.time_end,
                      },
                      {
                        name: 'Duration',
                        text: r.duration_millis,
                        unit: 'ms',
                        headline: true,
                      },
                      {
                        name: 'Success Count',
                        text: r.success_count,
                        headline: true,
                      },
                      {
                        name: 'Error Count',
                        text: r.error_count,
                        headline: true,
                      },
                    ],
                    }}))
                results: 1

    - name: PostgreSQL
      type: Database
      icon: postgres
      selectors:
        - name: pods
          labelSelector: app=postgresql
      properties:
        - name: Version
          lookup:
            postgres:
              - connection: "postgres://$(username):$(password)@postgres:5432/incident_commander?sslmode=disable"
                name: Version query
                auth:
                  username:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_USER
                        name: incident-commander-postgres
                  password:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_PASSWORD
                        name: incident-commander-postgres
                query: SELECT VERSION()
                display:
                  template: |
                    {{- range $r := .results.rows }}
                    {{- $r.version }}
                    {{- end}}
                results: 1
        - name: Size
          headline: true
          lookup:
            postgres:
              - connection: "postgres://$(username):$(password)@postgres:5432/incident_commander?sslmode=disable"
                name: Size query
                auth:
                  username:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_USER
                        name: incident-commander-postgres
                  password:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_PASSWORD
                        name: incident-commander-postgres
                query: SELECT pg_size_pretty(pg_database_size('incident_commander'))
                display:
                  template: |
                    {{- range $r := .results.rows }}
                    {{- $r.pg_size_pretty }}
                    {{- end}}
                results: 1
        - name: Connections
          headline: true
          lookup:
            postgres:
              - connection: "postgres://$(username):$(password)@postgres:5432/incident_commander?sslmode=disable"
                name: Active connections query
                auth:
                  username:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_USER
                        name: incident-commander-postgres
                  password:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_PASSWORD
                        name: incident-commander-postgres
                query: SELECT sum(numbackends) FROM pg_stat_database
                display:
                  template: |
                    {{- range $r := .results.rows }}
                    {{- $r.sum }}
                    {{- end}}
                results: 1

    - name: UI
      type: Website
      icon: html
      selectors:
        - name: pods
          labelSelector: app.kubernetes.io/name=incident-manager-ui
      properties:
        - name: Version
          configLookup:
            config:
              name: incident-manager-ui
              type: Kubernetes::Deployment
              tags:
                app.kubernetes.io/name: incident-manager-ui
                app.kubernetes.io/instance: incident-commander
            display:
              javascript: |
                config.spec.template.spec.containers[0]['image'].split(':')[1]
    - name: Kratos
      type: Service
      icon: ory-kratos
      selectors:
        - name: pods
          labelSelector: app.kubernetes.io/name=kratos
      properties:
        - name: Version
          configLookup:
            config:
              name: kratos
              type: Kubernetes::Deployment
              tags:
                app.kubernetes.io/name: kratos
                app.kubernetes.io/instance: incident-commander
            display:
              javascript: tags['app.kubernetes.io/version']
        - name: Identities
          lookup:
            postgres:
              - connection: "postgres://$(username):$(password)@postgres:5432/incident_commander?sslmode=disable"
                name: Count
                auth:
                  username:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_USER
                        name: incident-commander-postgres
                  password:
                    valueFrom:
                      secretKeyRef:
                        key: POSTGRES_PASSWORD
                        name: incident-commander-postgres
                query: SELECT COUNT(*) FROM identities
                display:
                  template: |
                    {{- range $r := .results.rows }}
                    {{- $r.count }}
                    {{- end}}
                results: 1
